package com.pms.po;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class EmployeeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table employee
     *
     * @mbg.generated Thu Nov 28 15:10:10 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table employee
     *
     * @mbg.generated Thu Nov 28 15:10:10 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table employee
     *
     * @mbg.generated Thu Nov 28 15:10:10 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee
     *
     * @mbg.generated Thu Nov 28 15:10:10 CST 2019
     */
    public EmployeeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee
     *
     * @mbg.generated Thu Nov 28 15:10:10 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee
     *
     * @mbg.generated Thu Nov 28 15:10:10 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee
     *
     * @mbg.generated Thu Nov 28 15:10:10 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee
     *
     * @mbg.generated Thu Nov 28 15:10:10 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee
     *
     * @mbg.generated Thu Nov 28 15:10:10 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee
     *
     * @mbg.generated Thu Nov 28 15:10:10 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee
     *
     * @mbg.generated Thu Nov 28 15:10:10 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee
     *
     * @mbg.generated Thu Nov 28 15:10:10 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee
     *
     * @mbg.generated Thu Nov 28 15:10:10 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employee
     *
     * @mbg.generated Thu Nov 28 15:10:10 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table employee
     *
     * @mbg.generated Thu Nov 28 15:10:10 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andE_idIsNull() {
            addCriterion("e_id is null");
            return (Criteria) this;
        }

        public Criteria andE_idIsNotNull() {
            addCriterion("e_id is not null");
            return (Criteria) this;
        }

        public Criteria andE_idEqualTo(Integer value) {
            addCriterion("e_id =", value, "e_id");
            return (Criteria) this;
        }

        public Criteria andE_idNotEqualTo(Integer value) {
            addCriterion("e_id <>", value, "e_id");
            return (Criteria) this;
        }

        public Criteria andE_idGreaterThan(Integer value) {
            addCriterion("e_id >", value, "e_id");
            return (Criteria) this;
        }

        public Criteria andE_idGreaterThanOrEqualTo(Integer value) {
            addCriterion("e_id >=", value, "e_id");
            return (Criteria) this;
        }

        public Criteria andE_idLessThan(Integer value) {
            addCriterion("e_id <", value, "e_id");
            return (Criteria) this;
        }

        public Criteria andE_idLessThanOrEqualTo(Integer value) {
            addCriterion("e_id <=", value, "e_id");
            return (Criteria) this;
        }

        public Criteria andE_idIn(List<Integer> values) {
            addCriterion("e_id in", values, "e_id");
            return (Criteria) this;
        }

        public Criteria andE_idNotIn(List<Integer> values) {
            addCriterion("e_id not in", values, "e_id");
            return (Criteria) this;
        }

        public Criteria andE_idBetween(Integer value1, Integer value2) {
            addCriterion("e_id between", value1, value2, "e_id");
            return (Criteria) this;
        }

        public Criteria andE_idNotBetween(Integer value1, Integer value2) {
            addCriterion("e_id not between", value1, value2, "e_id");
            return (Criteria) this;
        }

        public Criteria andE_nameIsNull() {
            addCriterion("e_name is null");
            return (Criteria) this;
        }

        public Criteria andE_nameIsNotNull() {
            addCriterion("e_name is not null");
            return (Criteria) this;
        }

        public Criteria andE_nameEqualTo(String value) {
            addCriterion("e_name =", value, "e_name");
            return (Criteria) this;
        }

        public Criteria andE_nameNotEqualTo(String value) {
            addCriterion("e_name <>", value, "e_name");
            return (Criteria) this;
        }

        public Criteria andE_nameGreaterThan(String value) {
            addCriterion("e_name >", value, "e_name");
            return (Criteria) this;
        }

        public Criteria andE_nameGreaterThanOrEqualTo(String value) {
            addCriterion("e_name >=", value, "e_name");
            return (Criteria) this;
        }

        public Criteria andE_nameLessThan(String value) {
            addCriterion("e_name <", value, "e_name");
            return (Criteria) this;
        }

        public Criteria andE_nameLessThanOrEqualTo(String value) {
            addCriterion("e_name <=", value, "e_name");
            return (Criteria) this;
        }

        public Criteria andE_nameLike(String value) {
            addCriterion("e_name like", value, "e_name");
            return (Criteria) this;
        }

        public Criteria andE_nameNotLike(String value) {
            addCriterion("e_name not like", value, "e_name");
            return (Criteria) this;
        }

        public Criteria andE_nameIn(List<String> values) {
            addCriterion("e_name in", values, "e_name");
            return (Criteria) this;
        }

        public Criteria andE_nameNotIn(List<String> values) {
            addCriterion("e_name not in", values, "e_name");
            return (Criteria) this;
        }

        public Criteria andE_nameBetween(String value1, String value2) {
            addCriterion("e_name between", value1, value2, "e_name");
            return (Criteria) this;
        }

        public Criteria andE_nameNotBetween(String value1, String value2) {
            addCriterion("e_name not between", value1, value2, "e_name");
            return (Criteria) this;
        }

        public Criteria andE_sexIsNull() {
            addCriterion("e_sex is null");
            return (Criteria) this;
        }

        public Criteria andE_sexIsNotNull() {
            addCriterion("e_sex is not null");
            return (Criteria) this;
        }

        public Criteria andE_sexEqualTo(String value) {
            addCriterion("e_sex =", value, "e_sex");
            return (Criteria) this;
        }

        public Criteria andE_sexNotEqualTo(String value) {
            addCriterion("e_sex <>", value, "e_sex");
            return (Criteria) this;
        }

        public Criteria andE_sexGreaterThan(String value) {
            addCriterion("e_sex >", value, "e_sex");
            return (Criteria) this;
        }

        public Criteria andE_sexGreaterThanOrEqualTo(String value) {
            addCriterion("e_sex >=", value, "e_sex");
            return (Criteria) this;
        }

        public Criteria andE_sexLessThan(String value) {
            addCriterion("e_sex <", value, "e_sex");
            return (Criteria) this;
        }

        public Criteria andE_sexLessThanOrEqualTo(String value) {
            addCriterion("e_sex <=", value, "e_sex");
            return (Criteria) this;
        }

        public Criteria andE_sexLike(String value) {
            addCriterion("e_sex like", value, "e_sex");
            return (Criteria) this;
        }

        public Criteria andE_sexNotLike(String value) {
            addCriterion("e_sex not like", value, "e_sex");
            return (Criteria) this;
        }

        public Criteria andE_sexIn(List<String> values) {
            addCriterion("e_sex in", values, "e_sex");
            return (Criteria) this;
        }

        public Criteria andE_sexNotIn(List<String> values) {
            addCriterion("e_sex not in", values, "e_sex");
            return (Criteria) this;
        }

        public Criteria andE_sexBetween(String value1, String value2) {
            addCriterion("e_sex between", value1, value2, "e_sex");
            return (Criteria) this;
        }

        public Criteria andE_sexNotBetween(String value1, String value2) {
            addCriterion("e_sex not between", value1, value2, "e_sex");
            return (Criteria) this;
        }

        public Criteria andE_birthdayIsNull() {
            addCriterion("e_birthday is null");
            return (Criteria) this;
        }

        public Criteria andE_birthdayIsNotNull() {
            addCriterion("e_birthday is not null");
            return (Criteria) this;
        }

        public Criteria andE_birthdayEqualTo(Date value) {
            addCriterionForJDBCDate("e_birthday =", value, "e_birthday");
            return (Criteria) this;
        }

        public Criteria andE_birthdayNotEqualTo(Date value) {
            addCriterionForJDBCDate("e_birthday <>", value, "e_birthday");
            return (Criteria) this;
        }

        public Criteria andE_birthdayGreaterThan(Date value) {
            addCriterionForJDBCDate("e_birthday >", value, "e_birthday");
            return (Criteria) this;
        }

        public Criteria andE_birthdayGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("e_birthday >=", value, "e_birthday");
            return (Criteria) this;
        }

        public Criteria andE_birthdayLessThan(Date value) {
            addCriterionForJDBCDate("e_birthday <", value, "e_birthday");
            return (Criteria) this;
        }

        public Criteria andE_birthdayLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("e_birthday <=", value, "e_birthday");
            return (Criteria) this;
        }

        public Criteria andE_birthdayIn(List<Date> values) {
            addCriterionForJDBCDate("e_birthday in", values, "e_birthday");
            return (Criteria) this;
        }

        public Criteria andE_birthdayNotIn(List<Date> values) {
            addCriterionForJDBCDate("e_birthday not in", values, "e_birthday");
            return (Criteria) this;
        }

        public Criteria andE_birthdayBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("e_birthday between", value1, value2, "e_birthday");
            return (Criteria) this;
        }

        public Criteria andE_birthdayNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("e_birthday not between", value1, value2, "e_birthday");
            return (Criteria) this;
        }

        public Criteria andE_entryDateIsNull() {
            addCriterion("e_entryDate is null");
            return (Criteria) this;
        }

        public Criteria andE_entryDateIsNotNull() {
            addCriterion("e_entryDate is not null");
            return (Criteria) this;
        }

        public Criteria andE_entryDateEqualTo(Date value) {
            addCriterionForJDBCDate("e_entryDate =", value, "e_entryDate");
            return (Criteria) this;
        }

        public Criteria andE_entryDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("e_entryDate <>", value, "e_entryDate");
            return (Criteria) this;
        }

        public Criteria andE_entryDateGreaterThan(Date value) {
            addCriterionForJDBCDate("e_entryDate >", value, "e_entryDate");
            return (Criteria) this;
        }

        public Criteria andE_entryDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("e_entryDate >=", value, "e_entryDate");
            return (Criteria) this;
        }

        public Criteria andE_entryDateLessThan(Date value) {
            addCriterionForJDBCDate("e_entryDate <", value, "e_entryDate");
            return (Criteria) this;
        }

        public Criteria andE_entryDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("e_entryDate <=", value, "e_entryDate");
            return (Criteria) this;
        }

        public Criteria andE_entryDateIn(List<Date> values) {
            addCriterionForJDBCDate("e_entryDate in", values, "e_entryDate");
            return (Criteria) this;
        }

        public Criteria andE_entryDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("e_entryDate not in", values, "e_entryDate");
            return (Criteria) this;
        }

        public Criteria andE_entryDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("e_entryDate between", value1, value2, "e_entryDate");
            return (Criteria) this;
        }

        public Criteria andE_entryDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("e_entryDate not between", value1, value2, "e_entryDate");
            return (Criteria) this;
        }

        public Criteria andE_departmentidIsNull() {
            addCriterion("e_departmentid is null");
            return (Criteria) this;
        }

        public Criteria andE_departmentidIsNotNull() {
            addCriterion("e_departmentid is not null");
            return (Criteria) this;
        }

        public Criteria andE_departmentidEqualTo(Integer value) {
            addCriterion("e_departmentid =", value, "e_departmentid");
            return (Criteria) this;
        }

        public Criteria andE_departmentidNotEqualTo(Integer value) {
            addCriterion("e_departmentid <>", value, "e_departmentid");
            return (Criteria) this;
        }

        public Criteria andE_departmentidGreaterThan(Integer value) {
            addCriterion("e_departmentid >", value, "e_departmentid");
            return (Criteria) this;
        }

        public Criteria andE_departmentidGreaterThanOrEqualTo(Integer value) {
            addCriterion("e_departmentid >=", value, "e_departmentid");
            return (Criteria) this;
        }

        public Criteria andE_departmentidLessThan(Integer value) {
            addCriterion("e_departmentid <", value, "e_departmentid");
            return (Criteria) this;
        }

        public Criteria andE_departmentidLessThanOrEqualTo(Integer value) {
            addCriterion("e_departmentid <=", value, "e_departmentid");
            return (Criteria) this;
        }

        public Criteria andE_departmentidIn(List<Integer> values) {
            addCriterion("e_departmentid in", values, "e_departmentid");
            return (Criteria) this;
        }

        public Criteria andE_departmentidNotIn(List<Integer> values) {
            addCriterion("e_departmentid not in", values, "e_departmentid");
            return (Criteria) this;
        }

        public Criteria andE_departmentidBetween(Integer value1, Integer value2) {
            addCriterion("e_departmentid between", value1, value2, "e_departmentid");
            return (Criteria) this;
        }

        public Criteria andE_departmentidNotBetween(Integer value1, Integer value2) {
            addCriterion("e_departmentid not between", value1, value2, "e_departmentid");
            return (Criteria) this;
        }

        public Criteria andE_salarylevelIsNull() {
            addCriterion("e_salarylevel is null");
            return (Criteria) this;
        }

        public Criteria andE_salarylevelIsNotNull() {
            addCriterion("e_salarylevel is not null");
            return (Criteria) this;
        }

        public Criteria andE_salarylevelEqualTo(Integer value) {
            addCriterion("e_salarylevel =", value, "e_salarylevel");
            return (Criteria) this;
        }

        public Criteria andE_salarylevelNotEqualTo(Integer value) {
            addCriterion("e_salarylevel <>", value, "e_salarylevel");
            return (Criteria) this;
        }

        public Criteria andE_salarylevelGreaterThan(Integer value) {
            addCriterion("e_salarylevel >", value, "e_salarylevel");
            return (Criteria) this;
        }

        public Criteria andE_salarylevelGreaterThanOrEqualTo(Integer value) {
            addCriterion("e_salarylevel >=", value, "e_salarylevel");
            return (Criteria) this;
        }

        public Criteria andE_salarylevelLessThan(Integer value) {
            addCriterion("e_salarylevel <", value, "e_salarylevel");
            return (Criteria) this;
        }

        public Criteria andE_salarylevelLessThanOrEqualTo(Integer value) {
            addCriterion("e_salarylevel <=", value, "e_salarylevel");
            return (Criteria) this;
        }

        public Criteria andE_salarylevelIn(List<Integer> values) {
            addCriterion("e_salarylevel in", values, "e_salarylevel");
            return (Criteria) this;
        }

        public Criteria andE_salarylevelNotIn(List<Integer> values) {
            addCriterion("e_salarylevel not in", values, "e_salarylevel");
            return (Criteria) this;
        }

        public Criteria andE_salarylevelBetween(Integer value1, Integer value2) {
            addCriterion("e_salarylevel between", value1, value2, "e_salarylevel");
            return (Criteria) this;
        }

        public Criteria andE_salarylevelNotBetween(Integer value1, Integer value2) {
            addCriterion("e_salarylevel not between", value1, value2, "e_salarylevel");
            return (Criteria) this;
        }

        public Criteria andE_firewarningIsNull() {
            addCriterion("e_firewarning is null");
            return (Criteria) this;
        }

        public Criteria andE_firewarningIsNotNull() {
            addCriterion("e_firewarning is not null");
            return (Criteria) this;
        }

        public Criteria andE_firewarningEqualTo(String value) {
            addCriterion("e_firewarning =", value, "e_firewarning");
            return (Criteria) this;
        }

        public Criteria andE_firewarningNotEqualTo(String value) {
            addCriterion("e_firewarning <>", value, "e_firewarning");
            return (Criteria) this;
        }

        public Criteria andE_firewarningGreaterThan(String value) {
            addCriterion("e_firewarning >", value, "e_firewarning");
            return (Criteria) this;
        }

        public Criteria andE_firewarningGreaterThanOrEqualTo(String value) {
            addCriterion("e_firewarning >=", value, "e_firewarning");
            return (Criteria) this;
        }

        public Criteria andE_firewarningLessThan(String value) {
            addCriterion("e_firewarning <", value, "e_firewarning");
            return (Criteria) this;
        }

        public Criteria andE_firewarningLessThanOrEqualTo(String value) {
            addCriterion("e_firewarning <=", value, "e_firewarning");
            return (Criteria) this;
        }

        public Criteria andE_firewarningLike(String value) {
            addCriterion("e_firewarning like", value, "e_firewarning");
            return (Criteria) this;
        }

        public Criteria andE_firewarningNotLike(String value) {
            addCriterion("e_firewarning not like", value, "e_firewarning");
            return (Criteria) this;
        }

        public Criteria andE_firewarningIn(List<String> values) {
            addCriterion("e_firewarning in", values, "e_firewarning");
            return (Criteria) this;
        }

        public Criteria andE_firewarningNotIn(List<String> values) {
            addCriterion("e_firewarning not in", values, "e_firewarning");
            return (Criteria) this;
        }

        public Criteria andE_firewarningBetween(String value1, String value2) {
            addCriterion("e_firewarning between", value1, value2, "e_firewarning");
            return (Criteria) this;
        }

        public Criteria andE_firewarningNotBetween(String value1, String value2) {
            addCriterion("e_firewarning not between", value1, value2, "e_firewarning");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table employee
     *
     * @mbg.generated do_not_delete_during_merge Thu Nov 28 15:10:10 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table employee
     *
     * @mbg.generated Thu Nov 28 15:10:10 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}